'\" t
.\"     Title: tvpvrd
.\"    Author: Johan Persson <johan162@gmail.com>
.\" Generator: DocBook XSL-NS Stylesheets v1.76.1 <http://docbook.sf.net/>
.\"      Date: 11/06/2013
.\"    Manual: http://sourceforge.net/projects/tvpvrd/docs/
.\"    Source: http://sourceforge.net/projects/tvpvrd/ @VERSION@
.\"  Language: English
.\"
.TH "TVPVRD" "1" "11/06/2013" "http://sourceforge\&.net/proje" "http://sourceforge\&.net/proje"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
tvpvrd \- TV Personal Video Recorder Server/Daemon
.SH "SYNOPSIS"
.HP \w'\fBtvpvrd\fR\ 'u
\fBtvpvrd\fR [options\&.\&.\&.]
.SH "DESCRIPTION"
.PP
The
\fBtvpvrd\fR(1)
command starts a video recording server that will make use of one or more installed TV\-Capture cards and, following a specified schedule, will record broadcasted and encoded streams from the capture card to disk\&. In effect a digital version of a programmable VHS\&. In a similar way as a VCR the daemon also have the capability to shutdown and power on the server in time for recordings (see the auto\-shutdown section below)\&. In the same way as the old\-fashioned VHS it has the capability to turn off the power of the server and wake it up in time for a recording in a fully automated way (by using the BIOS wakeup alarm)\&.
.PP
The original HW MPEG2 encoded videofile (from the capture card) can then be optionally transcoded (using
\fBffmpeg\fR(1)
) to a more efficient format by the daemon\&. The specific details on both the initial HW encoder settings as well as the transcoding options are bundled in a user configurable \*(Aqprofile\*(Aq\&. The daemon supports the usage of multiple profiles\&.
.PP
Each recording is done using one (or multiple) profiles\&. Each recording will always have at least one profile, the primary profile\&. In this way it is possible to create multiple transcoded versions of one recording, for example one high quality version for viewing on a computer and one low quality versions for viewing on a mobile device\&. By default the distribution includes six profiles \*(Aqhigh\*(Aq, \*(Aqnormal\*(Aq, \*(Aqlow\*(Aq without transcoding and \*(Aqthigh\*(Aq, \*(Aqtnormal\*(Aq, \*(Aqtlow\*(Aq with transcoding enabled\&. Additional profiles can easily be added by the user\&. A profile is specified in the traditional ini\-file text file format and is stored under the \*(Aqprofiles\*(Aq directory which is a subdirectory to the settings directory (normally
/etc/tvpvrd)\&. Each setting in the profile is well documented in the profiles\&.
.PP
The recordings specified are stored in a database which is a plain text file in XML format using UTF\-8 character encoding\&.
.PP
Recorded and transcoded files are stored in a predefined directory structure\&. The base directory for this directory structure is defined in the configuration file, see also the section "Directory Structure" below\&.
.SH "ARGUMENTS"
.PP
The following command line arguments are supported when starting the daemon
.PP
\fB\-d\fR, \fB\-\-daemon\fR [\fIy\fR|\fIn\fR]
.RS 4
Determine whether the server should be disconnected from the controlling terminal (a\&.k\&.a\&. running as a daemon)\&. If the server is run as a daemon the logfile cannot be \*(Aq\fIstdout\fR\*(Aq\&. This command line option will override the \*(Aq\fIdaemon\fR\*(Aq setting in the ini\-file\&. The default setting is to run as a daemon\&.
.RE
.PP
\fB\-f\fR, \fB\-\-xmldbfile\fR filename
.RS 4
Use the specified file as the database file where all the specified recordings are stored in XML format\&. This command line option will override the \*(Aq\fIxmldbfile\fR\*(Aq setting in the ini\-file\&. The default location is \*(Aq<dataroot>/xmldb/tvpvrd_db\&.xml\*(Aq
.RE
.PP
\fB\-h\fR, \fB\-\-help\fR
.RS 4
Print a short help and exit\&.
.RE
.PP
\fB\-i\fR, \fB\-\-inifile\fR filename
.RS 4
Use the specified file as configuration file\&. This will override the location specified at compile time\&. The default location is \*(Aq/etc/tvpvrd/tvpvrd\&.conf\*(Aq
.RE
.PP
\fB\-l\fR, \fB\-\-logfile\fR filename
.RS 4
Define the name of the logfile\&. Two special names can be used,
stdout
which will cause the log to be written to the
\fIstdout\fR
and
syslog
which will cause the logs to be written using the default system logger\&. This command line option will override the \*(Aq\fIlogfile\fR\*(Aq setting in the ini\-file\&. The default location is \*(Aq/tmp/tvpvrd\&.log\*(Aq
.RE
.PP
\fB\-p\fR, \fB\-\-port\fR \fInnnn\fR
.RS 4
Specify what TCP/IP port number that the server will listening on\&. This will override the \*(Aq\fIport\fR\*(Aq setting in the ini\-file\&. By default this is port 9300\&. The port number of the WEB\-interface will be
\fInnnn\fR+1 so by default the WEB\-interface will be available on port 9301\&.
.RE
.PP
\fB\-s\fR, \fB\-\-slave\fR
.RS 4
Run the server in slave configuration\&. This will allow the server to be running on a machine with no video cards and be restricted to only do video transcodings\&.
.RE
.PP
\fB\-V\fR, \fB\-\-verbose\fR [\fI0\fR|\fI1\fR|\fI2\fR|\fI3\fR]
.RS 4
Log verbosity level\&. 0 will only log error messages, 1 will log error and info messages, 2 will log errors, info and additional notices finally 3 will also log (possibly) high volume debug messages\&.
.RE
.PP
\fB\-v\fR, \fB\-\-version\fR
.RS 4
Print program version information and exit\&.
.RE
.PP
\fB\-x\fR, \fB\-\-xawtvrc\fR filename
.RS 4
Use the specified file to read the station names\&. The station name file maps the standardized frequency channel names to the more commonly used station names\&. See the section "Stations, channels and frequencies" below for more information\&. This will override the setting in the ini\-file\&. The default location is \*(Aq/etc/X11/xawtvrc\*(Aq
.RE
.PP
The default arguments corresponds to starting the server with
.PP

.sp
.if n \{\
.RS 4
.\}
.nf
tvpvrd \-d y \-f tvpvrd_db\&.xml \-i /etc/tvpvrd/tvpvrd\&.conf \-p 9300 \-V 1 \-x /etc/X11/xawtvrc
.fi
.if n \{\
.RE
.\}
.sp
.SH "STARTING AND STOPPING THE SERVER"
.PP
While strictly speaking not necessary the server should normally be started by the root user\&. As soon as the server doesn\*(Aqt need root privileges it will switch to run as the user specified in the ini\-file, by default this is the user
\fItvpvrd\fR\&. This user should for security reasons not be the \*(Aqroot\*(Aq user\&. This user should be a system user without login shell\&. Such a user can normally be created by running the command \*(Aq\fIuseradd\fR\*(Aq\&. (If the server is installed via the RPM package this user will be automatically created)\&.
.PP
Note: If you want to use the automatic shutdown/wakeup functionality the daemon must be run as root (since only root has privileges to access the BIOS wakeup functionality)
.sp
.if n \{\
.RS 4
.\}
.nf
$> useradd \-r tvpvrd
.fi
.if n \{\
.RE
.\}
.PP
To start the server as root the simplest way is to just call
.sp
.if n \{\
.RS 4
.\}
.nf
$root> tvpvrd
.fi
.if n \{\
.RE
.\}
.PP
In order to stop the server and allow it to do a clean shutdown the SIGHUP (or SIGSTOP) signal should be sent to the process running the server (assuming tvpvrd has been started as a daemon)\&. The distribution includes two support scripts to help with this\&.
.PP
The first script will be automatically installed in "/etc/init\&.d/tvpvrd" and follows the normal guidelines for a "init\&.d" service start/stopping script according to LSB (Linux Standard Base)\&. Using this script to start the server the command
.sp
.if n \{\
.RS 4
.\}
.nf
/etc/init\&.d/tvpvrd start
.fi
.if n \{\
.RE
.\}
.PP
is given and to stop the server the command
.sp
.if n \{\
.RS 4
.\}
.nf
/etc/init\&.d/tvpvrd stop
.fi
.if n \{\
.RE
.\}
.PP
should be given\&. The startup script also supports the "restart" and "status" options\&.
.PP
The second script is \*(Aqstop\-tvpvrd\*(Aq which will read the server process pid from \*(Aq/var/run/tvpvrd\&.pid\*(Aq and send the SIGHUP signal\&.
.PP
In order to stop the server first switch to root user and then use the command
.sp
.if n \{\
.RS 4
.\}
.nf
$root> stop\-tvpvrd
.fi
.if n \{\
.RE
.\}
.PP
Finally if for some reason you don\*(Aqt want to use any of these scripts it is possible to manually kill the daemon process by sending the SIGHUP signal via the \*(Aq\fIkill\fR\*(Aqcommand as
.sp
.if n \{\
.RS 4
.\}
.nf
$> kill \-SIGHUP <pid>
.fi
.if n \{\
.RE
.\}
.PP
where <pid> is the process id of the
\fItvpvrd\fR
daemon\&. Use \*(Aqps xa\*(Aq to find the pid or if the server was started as root look in the file \*(Aq/var/run/tvpvrd\&.pid\*(Aq
.PP
When the server is shutdown, depending on the "Kill transcoding flag" (see the
\fB\-ktf\fR
command), any on\-going transcodings will be shutdown\&. Any potential ongoing recordings will be aborted and the recordings up to the time the recording is shutdown will be left in the \*(Aq<data\-dir>/vtmp\*(Aq directory and must be removed manually\&.
.PP
If the server gives the error message : "\fIServer can not be started\&. See system log\fR" then more information about the details of the problem can be found in the system log, normally
/var/log/messages\&. One common issue might be a stale lock file (in
/var/run/tvpvrd\&.pid) in case the server is not started from the root user\&. The reason is that in order to write these lock files the server must run as a root\&. Since normally the server only runs as a root at the startup phase (and then switches over to the selected user) the lock/pid file cannot be removed\&. This is not a problem if the server is again started as root but if the server is started from the command line as a non\-root user it will complain that the lock file already exists\&. The solution in this case is to manually remove the lockfile (as root)\&.
.SH "INTERFACING WITH THE SERVER"
.PP
The primary interface to the server is via a TCP/IP connection to the server running \*(Aq\fItvpvrd\fR\*(Aq via a dedicated port (by default 9300)\&. The server is controlled via a simple (but efficient) command language which allows manipulation of future recordings and various other administrative tasks\&. All commands are extensively described in the section \*(AqCommand language\*(Aq below\&.
.PP
The preferred way of interacting with the server on the command level is by using the supplied utility shell \*(Aqtvpsh\*(Aq\&. This supports history and full command line editing and is recommended over a plain \*(Aqtelnet\*(Aq connections to the server\&.
.PP
As an optional way there is also a native basic WEB\-interface that allows a limited number of commands such as adding of new recording, deleting existing recordings, viewing status, showing upcoming recordings etc\&. The WEB\-inerface contains enough controls and command to handle most day\-to\-day needs for a digital VCR and it is anticipated that most users should use this interface as there main port of accessing the server\&.
.PP
The WEB\-interface must first be enabled in the config\-file since it is by default disabled\&. The WEB interface is accessed on port number (port+1) i\&.e one more than the port number specified for the command interface\&. This means that by default the WEB\-interface is available on port 9301\&. The WEB\-interface can optionally require a separate login as specified in the configuration file\&.
.PP
To access the WEB interface from a browser simple give the server address and port number\&. For example to access the daemon on the server "localhost" with the default port number use URL "http://localhost:9301"\&.
.PP
The look and feel (themes) of the WEB\-interface is entirely controlled by a CSS style sheet stored in the configuration directory (usually specified as
/etc)\&. This is the same place as where the configuration file is stored\&. This means it is straightforward to change and adjust the look and feel from the default colors and layout in the supplied themes\&. All that is necessary is basic knowledge of CSS stylesheets\&.
.PP
It is also possible to control some functional aspects uin the WEB\-UI such as what controls are displayed in the Web UI by adjusting config file settings\&. Supported settings are:
.PP

.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
display_advanced_rec_control, This setting hides/displays two extra controls for how naming of repeated recordings are named\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
web_display_theme, If the theme switching control should be displayed\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
web_autodisplay_transc, If the transcoded information bar should be hidden if there are no ongoing transcodings\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
web_display_qadd, If the section for "Quick Recording", should be displayed in the Web\-UI or not\&.
.RE
.PP
The WEB interface will also automatically adapt when it detects that a mobile phone browser is trying to access the interface to a format more suitable for a smaller screen\&. By necessity this means that only an even smaller subset of the WEB\-commands are available in the browser on a phone in order to keep the interface simple\&. The detection is based on the header that the browser sends and should detect most phones\&. However, it is possible that some browsers used on mobile phone will not be detected as mobile browsers and then the normal WEB interface will be used\&.
.PP
See the section "Connecting to the server" below for more detailed examples\&.
.SH "AUTOMATIC SHUTDOWN AND STARTUP OF THE SERVER"
.PP
In the same way as a VCR (or a modern HD recorder) has the capability to shut down and power on in time for recording the tvpvrd can do this with the server it is running on\&. The daemon package has two radically different way to do this and depending on your preference (and/or HW) either way can be chosen\&. The server supports either the usage of the internal BIOS real time clock using a wakeup alarm or running a power management daemon (\fBtvpowerd\fR) on a separate server\&. If you have a reasonable modern server (say 2005 or newer) it will most likely support BIOS wakeup alarm and since that is the easiest method we strongly recommend you use that method\&.
.SS "Method 1: Using the BIOS wakeup alarm on the server running the tvpvrd daemon"
.PP
To use this method it is first important to recognize that the daemon must be running as user \*(Aqroot\*(Aq in order to have the privilege to shut down the server\&. This is also the preferred method\&.
.PP
To enable this feature it must first be enabled in the configuration file under the section
[shutdown]
\&. By default this feature is disabled\&. There are then some basic parameters that should be checked according to preference\&. For example the parameter
ignore_users
will determine if the shutdown should still happen if there are user logged in to the server or not\&. All the available parameters are fully specified and documented in the default configuration file\&.
.PP
To make this work the daemon assumes that the RTC (BIOS Real Time Clock) presents an interface on the "/sys/class/rtc/rtc0/wakealarm" that can be used to set the time in seconds since Epoc when the server should wake up if it is powered off\&. In some BIOS it is also necessary to first enable the wakeup alarm by changing some default setting (check your BIOS documentation)\&.
.PP
In order not to miss the recording the server is woken up a little bit before the actual recording time\&. By default this is 180 sec which should be enough time for even old servers to fully wake up\&. This pre\-wakeup time is configurable in the configuration file\&.
.PP
The actual shutdown of the server is done by the "shutdown\&.sh" script stored in the configuration directory\&. In the distribution this is included as a template "shutdown\&.sh\&.template" which can then be augmented\&. By default the script initiates a complete server shutdown and if that is enough the template can just be copied and renamed\&.
.PP
If the server is reasonable new it might be possible to do a sleep (or hibernate) instead but in that case we would recommend using the second method of auto\-shutdown using the separate "\fBtvpowerd\fR" as described below\&. Please note that there are some special precautions that must be taken to use sleep or hibernation mode since the ivtv\-driver is not power management aware\&. So unless absolutely necessary please use the safe and always working method of just doing a complete shutdown\&. See
\fBtvpowerd\fR(1)
for more details\&.
.SS "Method 2: Using the tvpowerd\-daemon on a separate server"
.PP
Since some older motherboards does not have a working BIOS wakeup clock and for the case where you rather sleep (or hibernate) the server instead of shutting it down the package gives an alternative auto\-shutdown method using the "\fBtvpowerd\fR" daemon\&. This is a separate daemon that must be run on a separate server\&. This daemon will then communicate with the server running the recording daemon and shut the server down and power it on according to the recording schedule\&. The power on will be done using Wakeup\-On\-LAN so this must be enabled in the BIOS on the recording server\&. There is a complete separate manual page describing all the details on how to use this daemon in
\fBtvpowerd\fR(1)
.SS "When shall I use Method 1 and when shall I use Method 2 ?"
.PP
If only one server is available and the motherboard supports the RTC wakeup alarm then method 1 is the preferred way\&. Even if you have multiple servers available it is still easier to use method 1\&. However there is one circumstance where it might be more practically to use the
\fBtvpowerd\fR
standalone daemon\&. For the common case where you have a NFS or SMB file share exposed from the recording server, for example to be able to view the videos on another computer, there are all kinds off issues if the SMB or NFS server is just shut down without the share unmounted\&. Especially the NFS protocol is notoriously bad in handling a disconnected server without a proper unmount\&. Running the separate
\fBtvpowerd\fR
daemon on the client will allow you to put in the necessary unmount commands in the shutdown script (assuming the tvpowerd is running on the server mounting shares)\&.
.PP
In future releases of
\fBtvpvrd\fR
it will be possible to run user selectable scripts on clients to the recording server at the shutdown time\&. This can then be used to, for example, give the client notification that the recording server is shutting down and then be able to do any necessary unmounts or other cleanup activities\&.
.PP
In the case where you rather want to suspend to RAM/DISK then it is also necessary to run the separate
\fBtvpowerd\fR
daemon\&. The main reason here is that since the ivtv\-drivers that resides in the kernel is not power management aware they must therefore be unloaded before the server is put into hibernation and then reloaded when the server is woken up\&. This can be (and is) all taken care of in the shutdown scripts for the tvpowerd daemon\&. However, there is really no practical reason to put the recording server in sleep/hibernation state compare with a full shutdown\&. The only thing gained is faster startup time which for these use\-cases are not really interesting (nor necessary)\&.
.SH "RUNNING AS MASTER OR SLAVE"
.PP
Normally the daemon will do necessary checks to verify that one or several video cards are present in order to startup\&. If no video cards are found the server will print an error message and terminate\&. However it is still possible to run the daemon on a server with no video cards by running the server in
\fIslave\fR
mode\&. This will restrict the functionality of the server to only transcoding and status information commands\&.
.PP
The primary purpose of running the server in slave configuration is to make it possible to use several servers to transcode video files\&. There are three commands "\fBtf\fR" (\fItranscode file\fR), "\fBtl\fR" (\fItranscode list\fR) and "\fBtd\fR" (\fItranscode directory\fR) that can be used to transcode one or more files in slave mode (see the command section below for details)\&.
.PP
In future version of the server there will be possibility to configure a load balancing setup among several servers for the transcoding but as of version 1\&.x this has to be done manually\&.
.PP
The server can be run in slave mode by either giving the "\fB\-s\fR" option when starting the server or by setting the configuration alternative "\fBmaster=no\fR" in the configuration file\&.
.SH "CONNECTING TO THE SERVER"
.PP
Once the server is running the easiest way to connect to the server is by using the \*(Aq\fItelnet\fR\*(Aq program\&. Assuming that the
\fItvpvrd\fR
server is running on the localhost the following command will connect to the server (assuming the default port 9300 has not been changed in the ini\-file (e\&.g\&.
/etc/tvpvrd\&.conf) or by a command line argument)\&.
.sp
.if n \{\
.RS 4
.\}
.nf
$> telnet localhost 9300
.fi
.if n \{\
.RE
.\}
.PP
After a successful connection the server will reply with a short information message\&. The full returned information message at the connection time should look something similar to the following (your version and build might be different):
.sp
.if n \{\
.RS 4
.\}
.nf
Welcome to tvpvrd\-2\&.3\&.0  [Server] (build:20101225\&.191)
You are user number 1 out of 4 allowed\&.
Type \*(Aqexit\*(Aq to disconnect\&.
Type \*(Aqh\*(Aq to list available commands\&.
Connection will be closed after 30 min of inactivity\&.
.fi
.if n \{\
.RE
.\}
.PP
If password protection (see section "Security" below) the welcome message is not be shown until the correct password has been specified\&. Instead when password protection is enabled the connection sequence looks like this
.sp
.if n \{\
.RS 4
.\}
.nf
$> telnet localhost 9300
Password:\fBxxxxxxx\fR
Welcome to tvpvrd\-2\&.3\&.0  [Server] (build:20101225\&.191)
You are user number 1 out of 4 allowed\&.
Type \*(Aqexit\*(Aq to disconnect\&.
Type \*(Aqh\*(Aq to list available commands\&.
Connection will be closed after 30 min of inactivity\&.
.fi
.if n \{\
.RE
.\}
.PP
This means that the correct server password has to be given before the welcome message is seen\&. The server is now ready to accept commands on this connection\&.
.PP
To disconnect to the server just type \*(Aq\fBexit\fR\*(Aq
.SH "USING THE TVPSH TO CONNECT TO THE DAEMON"
.PP
Starting with version 3\&.1\&.0 the distribution also includes a full command line shell,
\fBtvpsh\fR\&. This allows much better editing (emacs compatible editing) as well as full command line history\&. This shell can also be used as a system login shel and hereby making it possible to connect to the daemon using
\fBssh\fR
for a more secure communication by creating a unique user with tvpsh as the login shell\&.
.PP
How to setup and use the tvpsh command line shell is fully described in
\fBtvpsh\fR(1)
.PP
In its simplest for (assuming you are on the same sever as the dameon) the shell can be started with
.PP

.sp
.if n \{\
.RS 4
.\}
.nf
$> tvpsh
.fi
.if n \{\
.RE
.\}
.PP
Run
\fBtvpsh \-h \fRfor a list of supported options\&.
.SH "THE RECORDING AND TRANSCODING PROCESS"
.PP
The recording process refers to the process of saving the generated MPRG2 video stream from the capture card to a file\&.
.PP
The transcoding process refers to the re\-coding of the original MPEG2 video stream to a more efficient format, usually an MPEG4 container using H\&.264 video codec (the default in the distributed profiles)\&. Depending on the quality settings it is common to see reduction in original file size with 75%\&.
.PP
The transcoding process is very CPU\-intensive and with the default settings in the distribution the normal profile will require anywhere between roughly 1\&.5 times the original recording length to transcode on a pentium dual core to roughly 0\&.5 times the recording length on a newer i3 or i5 Intel CPU\&. With a high end Intel multi\-core i7 CPU and some basic setting the transcoding time can be down to ~0\&.3 times the length of the original recording\&.
.PP
In order not to make the machine totally unresponsive the ini\-file specifies a maximum load on the server for a transcoding to start in order not to load the server with too many parallel transcoding processes\&. The transcoding process is also run with a \*(Aqnice\*(Aq value of 20 to have the transcoding process interfere as little as possible with any interactive use on the server\&. If the load is too high the transcoding processes will be put in a queue waiting for the load to become acceptable\&. Note that the serer will not wait forever and if the load has not dropped below the threshold for a certain time (as specified by the
max_waiting_time_to_transcode
setting in the ini\-file) the transcoding will be cancelled and the original MPEG2 file left alone\&.
.PP
When a recording is started a temporary directory will be created under \*(Aq<data\-dir>/vtmp/vid<n>/\*(Aq where <n> is the number of the video card used\&. The name of the temporary directory will be the same as the base name of the recording\&. The MPEG2 stream is read from the video card and stored in a file in the temporary directory with the same name as the title (converted to lower case) with the suffix "\&.mpg"\&.
.PP
If multiple profiles are specified there exists an ambiguity on what HW MPEG2 parameters to use in case they are different among the selected profiles\&. The server resolves this by using the HW parameters from the profile with the highest specified video bitrate\&. This is motivated by the fact that using high quality encoder settings on a low original bitrate can never give a good result\&.
.PP
When the recording has stopped the transcoding profile(s) is read and the transcoding is started after a check that the server load is not higher than the maximum allowed load in order to start a transcoding\&. If the load is too high the transcoding is put in a queue of waiting transcodings that will be started when the server load allows the transcoding to start\&. One transcoding will be made for each of the associated profiles of this recording\&.
.PP
As a special case no transcoding will be made if the \*(Aq\fIffmpeg\fR\*(Aq profile bitrate is set to 0 Mbps in the profile\&. In this case only the original MPEG2 video file will be kept\&.
.PP
Once a transcoding has finished the resulting MP4 file will be moved either to the directory \*(Aq<data\-dir>/mp4/<profile>/\*(Aq with the same file basename as the title but with the filename suffix "\&.mp4" or directly under
\*(Aq<data\-dir>/mp4/\*(Aq
depending whether or not subdirectories should be used for each profile (see setting file)\&.
.PP
When all the transcodings have been done and if the profile defines that the original MPEG2 video stream should be kept it is moved to the directory \*(Aq<data\-dir>/mp2/\*(Aq\&. After that the temporary directory (and the original MPEG2 file) is deleted\&.
.PP
Another possibility is to do the recording first and later decide to transcode one or several video files\&. This is done by giving a separate transcode command to the server and specify the full file path to the file to be transcoded\&. In order to make this as convenient as possible there are three variants of this\&. One variant is to transcode one video file, the other is to specify a directory where all the files in that directory will be transcoded\&. The final way is to store a number of video file names in a text file and use that text file as an input list of the files to transcode\&. See the command description below for the commands "\fBtf\fR", "\fBtd\fR" and "\fBtl\fR"\&.
.PP
Note that it is possible to get notify by mail when a transcoding has finished\&. The email address used is specified in the
ini\-file
.SH "DIRECTORY STRUCTURE"
.PP
The root directory for where the video files (recordings) are stored is specified in the ini\-file (e\&.g\&.
/etc/tvpvrd/tvpvrd\&.conf)\&. Under this root directory the following subdirectories and files are automatically created by the server:
.PP
.PP
<dataroot>/mp2
.RS 4
If the profile specifies that the original MP2 files recorded from the capture card should be saved they are stored under this directory\&.
.RE
.PP
<dataroot>/mp4/<profile>
.RS 4
The transcoded original MPEG2 files are by default placed under a subdirectory under MP4 corresponding to the name of the profile used for the transcoding\&. This can be changed to a flat structure instead which will cause all transcoded files to be placed directly under the
mp4/
ignoring the profile name\&. This is done by setting the option \*(Aquse_profile_directories\*(Aq to false in the ini\-file\&.
.RE
.PP
<dataroot>/stats/<profile>\&.stats
.RS 4
The statistics recorded while transcoding is stored in a file corresponding to the name of the profile\&.
.RE
.PP
<dataroot>/vtmp
.RS 4
Temporary video directory used while recording and transcoding is performed\&. Each capture card used has its own subdirectory named \*(Aqvid\*(Aq\fIn\fR\&. Where \*(Aq\fIn\fR\*(Aq is the number for the video card in that folder\&.
.RE
.PP
<dataroot>/xmldb/tvpvrd_db\&.xml
.RS 4
The XML DB file that holds the database for all defined recordings\&.
.RE
.SH "SECURITY"
.PP
In order to prevent unauthorized access to the server the server have a basic password protection\&. This means that a password can be configured to be used before a client can start giving command to the server\&. This is configured in the ini\-file\&. The configuration uses the same password for all clients so the server does not support multiple users/multiple password\&. Since the password is stored in plain text format the configuration file should have restricted access\&. This should not be considered strong security but rather a weak "stop\-messing\-with\-my\-recordings" protection\&.
.PP
The setting whether password should be used or not and the actual password is specified in the ini\-file\&.
.PP
After connecting to the server when the password has been enabled the first string sent back from the server will be the single string:
.sp
.if n \{\
.RS 4
.\}
.nf
Password:
.fi
.if n \{\
.RE
.\}
.PP
The rest of the reply is the same as when no password is used\&.
.PP
For the WEB\-interface it is also possible to specify a different user and password to allow the usage of the WEB GUI\&.
.SH "STATIONS, CHANNELS AND FREQUENCIES"
.PP
All TV stations are broadcasted on a local unique frequency\&. The frequency spectrum is a natural resource that divided in internationally standardized fixed width channels\&. A channel is the same as a specified frequency\&. The distance between each assigned frequency is different depending on both the frequency area and the TV standard used\&. This depends on the fact that different TV standard requires different bandwidth\&. This channel division is also different depending on the geographic location\&.
.PP
It is important to realize that these fixed frequencies are assigned according to international standards\&. In each city (and city area) the broadcasting company is then responsible for assigning local stations to appropriate frequency channels\&. This is the difference between station and channel names\&. The channel names are standardized names that have short name with 2 to 5 characters, for example \*(AqSE14\*(Aq\&. Even though the frequency division is standardized the exact channel names are not always given with the assigned names\&. For example a broadcasting company might claim (for example on their home page) that the station \*(AqBBC1\*(Aq in a certain area can be found on channel \*(Aq14\*(Aq when they actually should have said that the station can be found on channel \*(AqSE14\*(Aq which is the official name of this channel\&.
.PP
To further complicate matters different countries uses different standardized frequency maps\&. The program has built in knowledge of the frequency channels available in the following geographic areas
.PP

.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"europe\-west", Western europe
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"europe\-east", Eastern Europe
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"france", France
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"ireland", Ireland
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"italy", Italy
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"australia", Australia
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"newzealand", New Zealand
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"us\-bcast", United States air frequencies
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"us\-cable", United States cable frequencies
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"us\-cable\-hrc", United States cable frequencies
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"us\-cable\-irc", United States cable frequencies
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"japan\-bcast", Japan air frequencies
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"japan\-cable", Japan cable frequencies
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"china\-bcast", China air frequencies
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"southafrica", Southafrica air frequencies
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"argentina", Argentina air frequencies
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"australia\-optus", Australia alternative air frequencies
.RE
.PP
Since the program has no way to automatically know which map to use this must be specified in the application ini\-file\&. This map file lists all the defined frequencies and the official name for that country and frequency\&. The map to use should be specified with the name shown in the list above as one entry in the station\-channel map file under the
"global"
section as tag
"freqtab", for example as
.sp
.if n \{\
.RS 4
.\}
.nf
[global] 
freqtab = europe\-west
.fi
.if n \{\
.RE
.\}
.PP
In order to record a specific station the tuner on the capture card must be tuned to the correct frequency channel used by the station we want to record\&. Since it is a lot easier to use the station names, for example "BBC1", than the official name on the frequency channel, e\&.g\&. SE14, the program uses yet another mapping file so it is possible to use station names when recording instead of frequency channels\&. This is the way most people think about "TV\-Stations"\&.
.PP
In order for maximum re\-use
\fItvpvrd\fR
uses the same format of the station/channel mapping file as is done in \*(Aq\fIxawtvrc\fR\*(Aq\&. This is a plain text file using ini\-file format\&. In the distribution an example file is included\&. Normally your TV provider provides a channel plan for your area\&. Unfortunately, to make things a bit more difficult some broadcasting company is not following the international naming convention\&.
.PP
If you are already viewing TV on your computer chances are very high that you already have this \*(Aqxawtvrc\*(Aq ini\-file since it is used by many of the available TV viewing programs\&. Common location for this file is either \*(Aq/etc/X11/xawtvrc\*(Aq or in your home directory \*(Aq\&.xawtvrc\*(Aq\&.
.PP
An example of a station\-channel mapping file is shown below (this mapping file happens to be the maps for a large Swedish distributor in the Stockholm region):
.sp
.if n \{\
.RS 4
.\}
.nf
[global]
freqtab = europe\-west
[Kanal5]
channel = SE11
[Kanal8]
channel = 57
[Kanal9]
channel = S36
[MTV]
channel = SE16
[SVT24]
channel = E10
[SVTB/Kunsk]
channel = SE13
[TV1]
channel = E5
[TV2]
channel = E7
[TV3]
channel = E11
[TV4]
channel = E6
[TV4+]
channel = SE14
[TV6]
channel = E8
.fi
.if n \{\
.RE
.\}
.PP
The mapping above says that for example the station "Kanal5" can be found on frequency channel SE11\&. This mapping will then make it possible to use the name "Kanal5" when specifying recordings which is a lot easier than to remember that this station is on channel "SE11"\&.
.PP
Some cable providers are a bit naughty and does not follow the officially allocated channel names and frequencies\&. To handle this case there is also a possibility to specify the frequency directly in the station\-channel mapping file\&. Please note that this is an extension to the original format of the
xawtvrc
file and is only usable by
tvpvrd\&.
.PP
In order to provide a frequency directly the frequency is specified in place of the channel name as an integer prefixed by a \*(Aq@\*(Aq character\&. The frequency is given in kHz\&. An example of this is shown below
.PP

.sp
.if n \{\
.RS 4
.\}
.nf
[StrangeStation]
channel = @134550
.fi
.if n \{\
.RE
.\}
.PP
In some Unix distributions there are automatic frequency scanning helper programs (for example
\fBscantv\fR(1)) which will search through a given frequency map and list all channels where a broadcasting was found (this is identified as a high enough signal\-to\-noise ratio)\&. For example the SuSE distribution have a TV channel scanning setup in the yast2 configuration tool\&. The result of this channel scan is usually stored in a file named \*(Aqxawtvrc\*(Aq\&. This is normally stored in either \*(Aq/etc/X11/xawtvrc\*(Aq or in your home directory, as \*(Aq~/\&.awtvrc\*(Aq\&. However the actual station names you want to use for the channels must be manually given\&.
.PP
The somewhat strange name of the map file comes from an ancient TV viewer program under X11 which was/(is) called \*(Aqxawtv\*(Aq\&. For historic reason this name has stayed\&.
.PP
While it is possible to use either the station name or the channel name in a recording there must be a \*(Aqxawtvrc\*(Aq file in order for the server to start properly\&. If the station file cannot be found an error message will be printed and the server will not start\&.
.PP
The location of this file is normally specified in the ini\-file but the location can also be overridden with command line argument (\fB\-x\fR) when the server is started (see Options) which will override the setting in the ini\-file\&.
.SH "SELECTING ALTERNATIVE VIDEO INPUTS AS SOURCE FOR THE ENCODING"
.PP
A video capture card has normally several possible input to the HW MP2 encoder\&. When encoding TV the tuner is usually the selected input\&. However most cards also have one or several external connects that can be used to encode other video sources\&. For example Hauppauge analogue cards have one or more (depending on the card) S\-Video inputs that could be used as source for the video encoding\&.
.PP
The first thing to do if one wants to use one of these alternative input sources is to determine exactly what input sources the combination of card and low level driver supports\&. This can be done with the help of the command
\fBli\fR
\&. This will list all the available input sources for the specified video card\&. For example if your server have a Hauppauge 350 installed as the first card giving the command
.PP
\fBli 0\fR
.PP
would generate output similar to
.sp
.if n \{\
.RS 4
.\}
.nf
Hauppauge WinTV PVR\-350
00 :*(tuner) Tuner 1
01 : (camera) S\-Video 1
02 : (camera) Composite 1
03 : (camera) S\-Video 2
04 : (camera) Composite 2
05 : (camera) Composite 3
.fi
.if n \{\
.RE
.\}
.PP
This is a list of all possible video sources supported by the card\&. The current selected source is shown with an asterix just to the left of the type of input\&.
.PP
In order to use one of these inputs as the source for the recoding instead of the standard tuner a special station name is used "\fI_inpXY\fR"\&. The \*(AqX\*(Aq should be replaced by the video card to be used (starting at 0) and the \*(AqY\*(Aq should be replaced by the index for the wanted input source\&. So for example going back to the previous Hauppauge 350 above a meta station name of "_inp04" would use the composite 2 input source (assuming the card is the first card, i\&.e\&. 0)\&.
.PP
In order for the server to know which input belongs to the tuner this is specified in the config file with the setting
\fItuner_input_index\fR, by default this is 0\&. Since there is only one setting this implies that all cards use the same index for the tuner\&. This is a limitation of the current implementation\&. If you have several cards where the tuner is located at different input indexes then the server can only work correctly on one card\&. This is a very minor limitation since the number of users with multiple cards with tuners on other indexes than 0 can be assumed to be very small\&.
.PP
A final example will make this crystal clear\&. Assume we want to record a CCTV camer that is connected to composite input 1 on our Hauppauge 350 card\&. To immediately start recording for 30 min using the default profile we could give the command
.sp
.if n \{\
.RS 4
.\}
.nf
q _inp02 00:30 cctv_camera_one
.fi
.if n \{\
.RE
.\}
.PP
the command above would immediately start a recording using card 0 and input with index 2, i\&.e\&.\&. the "Composite 1" input\&. The recording will be stored with the name "cctv_camera_one\&.mp4" (assuming the default profile is setup to do transcoding to MP4 format)\&.
.PP
There is also an option to handle channel switching on a cable box\&. This is described in the "Adding user "hooks" for special processing" section below\&.
.SH "CONTROLLING AN EXTERNAL CABLE BOX"
.PP
When an external cable box is connected to the TV\-card there are some special considerations that must be taken into account since channel switching must be done by the cable box and not the TV\-card itself\&.
.PP
In order to enable the special processing described below the configuration file setting
external_switch
must be set to "yes"\&.
.PP
When a cable box is connected to the TV\-card the following facts must be taken into account:
.PP

.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
The cable box is connected to the TV\-card either to the tuner on a specific station or to the S\-video or composite input on the card\&. In any case this renders the usual channel switching on the tuner obsolete and wrong\&. To specify which input to be used for the cable box the configuration file setting
external_input
is used\&. This should specify the numerical value of the input channel\&. If the cable box is connected to the tuner on a fixed station this station must also be provided\&. This is specified in the configuration file as the setting
external_tuner_station
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
The actual channel switching must be done on the cable box\&. To help with this it is possible to connect an IR\-sender to the computer running
\fBtvpvrd\fR
and control this IR\-sender from the daemon\&. To help with this it is possible to have the
\fBtvpvrd\fR
daemon call an external script which in turn will receive the needed channel as argument\&. The script is then responsible for issuing the low level commands that control the IR sender based on the input to the script\&. In the distribution a template script for this is provided in the "switchchannel\&.sh\&.template" script\&. In the configuration script it should also be specified the name of the script used to do channel switching\&.
.sp
It is unfortunately beyond the scope of this manual to describe how to setup an infrared sender on a Linux server (see
http://www\&.lirc\&.org/for more information)\&.
.RE
.PP
\fINote:\fR
If you are unsure of what numerical value the input source on your card have use the
\fBtvpvrd\fR
command "\fBli\fR" (list iputs)\&.
.PP
Finally we list exactly what happens when a new recording is made with external switching enabled:
.PP

.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
The correct input source according to the
external_input
setting is activated\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
If the input source is the tuner the tuner is then set to the channel specified in
external_tuner_station
setting
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
The switch channel script is then called with the arguments indicating on what station (the station name not the channel name!) the recording should be made on\&. The name of the script is specified in the configuration file by the
external_switch_script
setting\&. This script should now call the low level IR routines to send the correct IR blast to the cable box to do the actual channel switching\&. The recording will start once the script has finished\&. This indicates that in order to avoid recording the actual switching of channel a short delay should be introduced in the script to make sure the cable box has really had time to switch channel when the recording starts\&.
.RE
.PP
The rest of the recording is handled exactly as for a "normal" recording\&.
.SH "MANAGING NOTIFICATIONS MAILS"
.PP
When configuring the daemon it is possible to set options that will send notification mails on important events in the daemon\&. This could be notifications on errors that occurred but also notifications on that a transcoding was finished or that the server was shutdown automatically while waiting for the next recording\&.
.PP
All mail settings are specified in the "[mail]" section of the configuration file\&.
.PP
Sending mails can be done by either using a specified SMTP outgoing server (in the configuration file) or by using the systems own "\fBmail\fR" command\&. However, if you chose the latter you cannot ask the server to send HTML formatted mails (by setting the configuration "use_html=yes"), only plain text mail with the systems built in "\fBmail\fR" command\&.
.PP
The actual text (and formatting in case of HTML mails) are controlled by templates that are stored in the general configuration directory\&. All templates are prefixed by "mail_*"\&. The templates exists in both a "*\&.txt" and a "*\&.html" version\&. The text version is used when sending plain text messages and the HTML version when sending HTML formatted mails\&. In complying with internet mail standards the plain version is also included in the mail even when sending HTML formatted mails so that mail clients that are unable to display HTML format will use the plain text version instead\&. (HTML mails are formatted according to internet standard MIME attachment rules\&.)
.PP
At the time of this writing the following templates are used by the daemon
.PP

.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
mail_shutdown\&.*
Used when sending notifications on automatic server shutdown
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
mail_transcend\&.*
Used when sending notifications when transcoding has finished
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
mail_error\&.*
Used when sending notifications on errors
.RE
.PP
In these templates you can see a number of keys (in the format of
[KEYNAME]) with different names that are replaced with the actual values at the time the mail should be sent\&. The name of the keys should make it obvious what value they will be replaced with is\&.
.PP
If you like to change the appearance of any of these templates, then by all means, go ahead !
.SH "OTHER MAIL SENDING OPTIONS"
.PP
In addition to sending notification mail it is also possible to have the server send HTML formatted mails with various layouts of the list of upcoming recordings\&. These lists can either be formatted as a list of all upcoming individual recordings one by one or as a concise format where the repeating recordings are presented as one line\&. The repeat interval and the number of occurrences left are stated in the table\&. Using this format the mail will contain two tables; one with the repeating recordings and one table with the single recordings\&.
.PP
The style of the HTML (look & feel) tables used can be modified with CSS format statement which are stored in the config file under the
\fB[format]\fR
section\&. By default they have a rather strict and as some may think, boring, color schema\&.
.PP
Read more below regarding the \*(Aq\fBlmr\fR\*(Aq and \*(Aq\fBlm\fR\*(Aq commands\&.
.PP
Please also note that sending these mails in HTML format require the config option "use_html" to be set to "yes" as well as a configured outgoing SMTP server (in the mail config section of the configuration file)
.SH "ADDING USER "HOOKS" FOR SPECIAL PROCESSING"
.PP
To maintain maximum flexibility the daemon will check for the existence of several (optional) shell scripts that can be provided by the user to take special actions on server shutdown, server startup, channel switching etc\&. The package provides templates for all of them that can be tweaked and then stored in the configuration directory (by default
/etc/tvpvrd)\&. The available hooks are listed below with a note if they are mandatory or not\&. To use the hooks they must first be renamed by removing the "*\&.template" extension\&. For the majority of the these script the daemon will call them with optional arguments\&. The template code shows how to make use fo these arguments, for example the full filename of a video that has just been recorded\&.
.PP
After the list we give some examples on how these hooks can be used
.PP

.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
postrec_processing\&.sh\&.template
, (\fIoptional\fR) This script is called just after a recording has been done and before any (optional) transcoding is taking place\&. The usage (or not) of this script is controlled in the configuration
use_postrec_processing
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
posttransc_processing\&.sh\&.template
, (\fIoptional\fR) This script is called just after a transcoding has been finished\&. The usage (or not) of this script is controlled in the configuration
use_posttransc_processing
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
shutdown\&.sh\&.template, (\fIoptional\fR) This script is called when automatic shutdown has been enabled (shutdown::enable=yes) , By default it will just do a full system shutdown\&. This script is mandatory if automatic shutdown has been enabled\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
startup\&.sh\&.template
, (\fIoptional\fR) This script is called right after the daemon has started but before any recordings are started\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
switchchannel\&.sh\&.template, (\fIoptional\fR) This script is called when the channel should be changed\&. This is controlled in the configuration file (external_switch=yes) \&. See section above on "\fIControlling an external cable box\fR" for more information on this particular script\&.
.RE
.PP
Some typical usages of these hooks are:
.PP

.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Handling automatic mounting/unmounting of filesystems\&. If the server running the daemon have exported filesystems to allow clients to fetch the videos by either SMB or NFS mounting there will be problem if those filesystems are still mounted if the server initiates an automatic shutdown\&. NFS is notoriously bad in handling a server no longer available and it can cause hangs and freezes in the client when it waits indefinitely for the server to respond\&.
.sp
This can be handled by allowing the recording server to execute mounting/unmounting scripts on clients (via ssh)\&. To allow ssh execution without passwords the recording server must be allowed to access a client via ssh and using public keys without passwords\&. This means that the recording servers public key (id_rsa\&.pub) must be stored in the clients "authorized_keys" file (usually in the home directory under
\&.ssh/)
.sp
In the shutdown script one has then to add calls to each client to unmount the filesystems and in the startup script one can call the clients to re\-mount all the necessary filesystems\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Some video cards require some postprocessing on the MP2 video before it is transcoded to MP4, This postprocessing can be done in the
postrec_processing\&.sh
script\&.
.RE
.PP
Just remember to rename the templates by removing the "*\&.template" extension so they can be found by the daemon\&.
.SH "RECORDING REPEATING SERIES BY SEASONS USING "SNNEMM" NAMING"
.PP
A common use case is to record a, say weekly, recurring series that continues for several seasons\&. One way of naming each episode in such a series is by giving the core series name a suffix of "SnnEmm" where "nn" is the season number and "mm" is the episode number\&.
.PP
Starting with version 4\&.3\&.0
tvpvrd
make this type of naming schema easier with the existing repeating recording command ("\fBar\fR")\&.
.PP
The way to handle this is to first specify that the name mangling for each recording in the series should add "Emm" to the core name\&. By default the episode number starts at "01"\&. This is done by the "\fBsm\fR" command as "\fBsm 2\fR"\&. The correct season number "Snn" is manually included when the name of the series is given\&. The default name mangling to be used by the server is also specified in the configuration file so if this is already set to "2" then there is no need to give this command\&. By default in the distribution the name mangling is set to add the date as a suffix to each recordings name\&.
.PP
If the recording of the series is started in the middle of the season the starting episode number can be specified with the "\fBss\fR" command\&.
.PP
\fBExample\fR
.PP
To record the second season of a program called "Nature" starting with episode 5 the following commands would have to be given:
.PP

.sp
.if n \{\
.RS 4
.\}
.nf
sm 2
ss 5
ar w 20 tv1 tue 21:00 21:56 Nature S02
.fi
.if n \{\
.RE
.\}
.PP
This will in the end create recordings that are named "Nature_S02E05","Nature_S02E06", and so on\&.
.PP
These types of recording can also be done from the Web\-interface (perhaps even easier since there is no need to remember the exact command sequence)\&.
.SH "COMMANDS (IN ALPHABETIC ORDER)"
.PP
The following is a list and detailed explanation of the commands that are recognized by the server\&. Commands are specified by 1 to 3 letters followed by any necessary arguments\&. It is possible to get more detailed help/information for each command by giving the help command \*(Aqh\*(Aq followed by the command, e\&.g\&. \*(Aqh l\*(Aq, will give more detailed help on the \*(Aqlist\*(Aq command\&.
.PP
Since there are quite a few commands we start with an overview with a one line explanation of each command\&. Further details can be found below
.PP

.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBa\fR
\- add new recording command
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBac\fR
\- adjust audio controls (treble,bass)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBaf\fR
\- add recordings from file
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBar\fR
\- add new repeating series recording
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBd\fR
\- delete single recording
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBdf\fR
\- display used disk space for data directory
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBdp\fR
\- display all settings for specified profile
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBdr\fR
\- delete all repeated recording
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBh\fR
\- help
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBic\fR
\- Set image controls (saturation,hue,brightness,contrast)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBkt\fR
\- kill all ongoing transcoding(s)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBktf\fR
\- set/unset kill transcoding flag at shutdown
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBl [n]\fR
\- list all pending recordings, possibly restricted to the next <n> recordings
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB[lf]\fR
\- list all defined frequency tables
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBlh [n]\fR
\- list all pending record in a shorter more human readable format
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBlm [n]\fR
\- list all pending record and send them in a mail (in HTML format)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBlmr [n]\fR
\- list all pending repeating and single recordings and send them in a mail (in HTML format)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBlc\fR
\- list all controls for the capture card
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBli [n]\fR
\- list all input sources available for the capture card
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBlog <n>\fR
\-show the last n lines of the logfile
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBls\fR
\- list all stations
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBlp\fR
\- list all profiles
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBlq <n>\fR
\- list queued transcodings for video card <n>
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBlr \fR
\- list all repeating and single recordings
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBmlg\fR
\- mail the log file
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBn\fR
\- list the immediate next recording on each video
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBo\fR
\- list the ongoing recording(s)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBot\fR
\- list the ongoing transcoding(s)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBq\fR
\- quick recording, start the recording immediately and continue the specified time
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBrh\fR
\- record history (list last N made recordings)
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBrst\fR
\- reset all statistics
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBrp\fR
\- refresh transcoding profiles from file
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBs\fR
\- print server status
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBsm\fR
\- set default name mangling for repeating series recording
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBsp\fR
\- set transcoding profile for specified recording
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBss\fR
\- set episode start number for repeating series recording
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBst\fR
\- print profile statistics
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBt\fR
\- print server time
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBtf\fR
\- transcode specified file
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBtl\fR
\- read list of videos to transcode from file
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBtd\fR
\- transcode all videos in directory
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBu\fR
\- force update of database with recordings
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBv\fR
\- print version
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBva\fR
\- adjust volume
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBvc <n>\fR
\- print information on TV\-Card <n>
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBwt\fR
\- list waiting transcodings
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBx\fR
\- view database (in XML format) with recordings
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fBz\fR
\- display all settings from ini\-file
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
\fB! <n>\fR
\- cancel ongoing recording on video card <n>
.RE
.PP
The input and output has a format suitable for both human interactive use as well as a programatically interfacing the server in order to build a UI that interacts with the server\&.
.PP
\*(Aq\fBa\fR\*(Aq \- \fBAdd new recording command\fR
.RS 4
Add new recording\&. The date/time logic is fairly complete and will for example correctly handle date crossings when recording starts and ends on different sides on the midnight\&. For all recording formats both title and profile might be omitted\&. In such case the title will be constructed from the station/channel name and the start date/time\&.
.sp
If no end time is given the recording will have the default recording length as defined in the ini\-file\&. In the distribution this is set to 0:59 hours\&.
.sp
For all variants the start and end time is specified as
.sp

\fIhh\fR
[:\fImm\fR[:\fIss\fR]]
.sp
The maximum length for one recording is 4 hours in order to keep the file size manageable\&.
.sp
The primary formats are described below\&. The syntactic element used have the following meaning:
.sp
<\fIch\fR> = Channel or station name
.sp
<\fIstarttime\fR> = Time for recording start
.sp
<\fIendtime\fR> = Time for recording end
.sp
<\fItitle\fR> = Title of recording\&. This will also be used as the filename of the resulting file\&. Note that the filename will always be converted to lower case\&.
.sp
<\fI@profile\fR> = Name of the profile(s) to be used to the recording\&. Up to 4 profiles can be specified for each recording\&.
.sp
The three main variants of the add command are:
.sp
\fIa <ch> <starttime> [<title>] [<@profile]\fR
.sp
Specification of only start time\&. The end time will match the default recording length as specified in the ini\-file\&.
.sp
If the start time is after the current time the date will be assumed to be today\&. If the time is earlier than the current time the date is assumed to be tomorrow\&.
.sp
If no title is specified the title will be constructed from the station/channel name and the start date and time\&.
.sp
If no profile is specified then the default profile specified in the ini\-file will be used\&.
.sp
\fIa <ch> <starttime> <endtime> [<title>] [<@profile]\fR
.sp
Specification of both start and end time\&.
.sp
If the start time is after the current time the date will be assumed to be today\&. If the time is earlier than the current time the date is assumed to be tomorrow\&.
.sp
If no title is specified the title will be constructed from the station/channel name and the start date and time\&.
.sp
If no profile is specified then the default profile specified in the ini\-file will be used\&.
.sp
\fIa <ch> <startdate> <starttime> <endtime> [<title>] [<@profile]\fR
.sp
Full date and time specification\&. The date can be specified as either a numeric ordinary date (note the order!):
.sp
\fIyyyy\-mm\-dd\fR
.sp
Numerical date yyyy=year, mm=month [1\-12],dd=day [1\-31]
.sp
or as week day in the coming week relative from todays date
.sp
[\fItoday\fR|\fItomorrow\fR|\fImon\fR|\fItue\fR|\fIwed\fR|\fIthu\fR|\fIfri\fR|\fIsat\fR|\fIsun\fR]
.sp
Relative date from today\&. The weekday name refers to the coming 7 days\&. If the same day as the current day is given then this refers to 7 days in the future\&.
.sp
If the start time is after the current time the date will be assumed to be today\&. If the time is earlier than the current time the date is assumed to be tomorrow\&.
.sp
If no title is specified the title will be constructed from the station/channel name and the start date and time\&.
.sp
If no profile is specified then the default profile specified in the ini\-file will be used\&.
.sp
\fBExamples\fR:
.sp
.if n \{\
.RS 4
.\}
.nf
a bbc1 19:30
.fi
.if n \{\
.RE
.\}
.sp
Start a recording at 19:30 on station BBC1 which will have the default duration, default title and profile\&.
.sp
.if n \{\
.RS 4
.\}
.nf
a bbc1 tue 19:30 News
.fi
.if n \{\
.RE
.\}
.sp
Start a recording at 19:30 on station BBC1 the coming Tuesday which will have the default duration with title \*(AqNews\*(Aq and profile\&.
.sp
.if n \{\
.RS 4
.\}
.nf
a bbc1 19:30 21:15 News 
.fi
.if n \{\
.RE
.\}
.sp
Start a recording at 19:30 which will last until 21:15 on BBC1 with title set to "News"\&. The default profile will be used\&.
.sp
.if n \{\
.RS 4
.\}
.nf
a ch4 wed 22:00 23:45 The Movie 
.fi
.if n \{\
.RE
.\}
.sp
Start a recording the coming Wednesday at 22:00 until 23:45 on CH4 with title "The Movie"\&. The default profile will be used\&.
.sp
.if n \{\
.RS 4
.\}
.nf
a bbc2 tomorrow 18 20 "World in Focus" @mobile 
.fi
.if n \{\
.RE
.\}
.sp
Start a recording tomorrow at 18:00 until 20:00 on bbc2 with title "World in Focus"\&. Using the mobile profile\&.
.sp
.if n \{\
.RS 4
.\}
.nf
a bbc2 tomorrow 18 20 "World in Focus" @mobile @normal
.fi
.if n \{\
.RE
.\}
.sp
Start a recording tomorrow at 18:00 until 20:00 on bbc2 with title "World in Focus"\&. Using both the mobile and the normal profile\&.
.RE
.PP
\fBac\fR \fI[<video\-card>] <b|t> <val>\fR \- \fBAdjust audio controls\fR
.RS 4
Adjust audio controls \*(Aqtreble\*(Aq and \*(Aqbass\*(Aq\&. The value range is [\-50,50] where 0 being the "neutral" value\&. If the video card number is omitted the value will be set for all available cards\&.
.sp
\fBExample:\fR
.sp

.sp
.if n \{\
.RS 4
.\}
.nf
ac 0 b 20 
ac b 20
.fi
.if n \{\
.RE
.\}
.sp
.RE
.PP
\*(Aq\fBaf\fR \fI<filename>\fR\*(Aq \- \fBAdd recordings from file\fR
.RS 4
Add recordings (specified with either the \*(Aq\fBa\fR\*(Aq or the \*(Aq\fBar\fR\*(Aq command) from a file\&. The file is simply a list with one command per line that is formatted exactly as if the command would have been entered in the teminal directly\&. The purpose of this is primarily to allow other programs to generate a list of future recordings that can be easily added to the daemon\&.
.sp
The filename specified must be give as a full path filename since the daemon has no concept of a current directory\&.
.sp
\fBExample:\fR
.sp

.sp
.if n \{\
.RS 4
.\}
.nf
af /tmp/newrecs\&.txt
.fi
.if n \{\
.RE
.\}
.sp
The file
/tmp/newrecs\&.txt
could then have the following lines (for example)
.sp

.sp
.if n \{\
.RS 4
.\}
.nf
a ch4 21:00 21:59 Child of our time @thigh
a bbc1 20:00 20:59 Walking with dinosaurs
a bbb1 21:00 21:29 lastnews @tlow
.fi
.if n \{\
.RE
.\}
.sp
.RE
.PP
\*(Aq\fBar\fR\*(Aq \- \fBAdd repeating series recording command\fR
.RS 4
Add a new repeated recording \&. The syntax is identical to the normal add command with the exception of the first two arguments which indicates the type of recurrence and the number of repeated occurrences or the end date\&. The full syntax is
.sp
\fIar <repeat\-type> <repeat\-count | end\-date> <normal add arguments>\fR
.sp
\fIrepeat\-type\fR
.sp
This specifies how often the repetition should be done\&. This can be specified as one of the following arguments:
.sp
\*(Aq\fBd\fR\*(Aq \- Repeat daily (can also be specified as \*(Aq1\*(Aq)
.sp
\*(Aq\fBw\fR\*(Aq \- Repeat weekly (can also be specified as \*(Aq2\*(Aq)
.sp
\*(Aq\fBm\fR\*(Aq \- Repeat monthly (can also be specified as \*(Aq3\*(Aq)
.sp
\*(Aq\fBf\fR\*(Aq \- Repeat Monday to Friday (can also be specified as \*(Aq4\*(Aq)
.sp
\*(Aq\fBs\fR\*(Aq \- Repeat every Saturday to Sunday (can also be specified as \*(Aq5\*(Aq)
.sp
\*(Aq\fBt\fR\*(Aq \- Repeat every Monday to Thursday (can also be specified as \*(Aq6\*(Aq)
.sp
\*(Aq\fBn\fR\*(Aq \- Repeat every Tuesday to Friday (can also be specified as \*(Aq7\*(Aq)
.sp
\*(Aq\fBe\fR\*(Aq \- Repeat every Wednesday to Friday (can also be specified as \*(Aq8\*(Aq)
.sp
\*(Aq\fBi\fR\*(Aq \- Repeat every Tuesday to Thursday (can also be specified as \*(Aq9\*(Aq)
.sp
\fIrepeat\-cnt | end\-date\fR
.sp
This specifies the number of repeated recordings by either specifying the number of repeats (as an integer) or by specifying the end date\&. If an end date is specified this includes the full final day up to 23:59:59
.sp
Since only one title is given for multiple recording the titles will be mangled with the recording date and time\&. In the recording list the title will usually be shown as "Base title (xx/yy)" where xx is the sequence number and yy is the total number of recordings in this sequence\&. This is controlled by the mangling parameter\&.
.sp
By default a series of recordings specified with this command is stored under a subdirectory with the same name as the basename of the recording\&. If you instead prefer to have all recordings stored in a flat structure directly under the recordings directory then set the config setting (in the config file) \*(Aquse_repeat_rec_basedir\*(Aq to \*(Aqno\*(Aq\&.
.sp
\fBExamples:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
ar f 10 bbc1 18 18:30 News
.fi
.if n \{\
.RE
.\}
.sp
Start recording every Mon\-Tue at BBC1 between 18:00 and 18:30
.sp
.if n \{\
.RS 4
.\}
.nf
ar w 20 tv1 tue 21:15 22:10 John Adams
.fi
.if n \{\
.RE
.\}
.sp
Start a recording once a week on Tuesday evening at 21:15 until 22:10 with base title "John Adams"\&.
.sp
.if n \{\
.RS 4
.\}
.nf
ar s 10 BBC1 01:00 02:30 Night movie 
.fi
.if n \{\
.RE
.\}
.sp
Add a recording every weekend night between 01:00 and 02:30 with the base title "Night movie"\&. The recording will be done for the next 5 weekends (2 recordings each weekend)\&.
.sp
.if n \{\
.RS 4
.\}
.nf
ar t 2010\-05\-10 channel3 19:00 19:59 House
.fi
.if n \{\
.RE
.\}
.sp
This will make recordings every Mon\-Thur at 19:00 until the 10:th of May 2010
.RE
.PP
\*(Aq\fBd\fR \fInnn\fR\*(Aq \- \fBDelete specified recording\fR
.RS 4
Delete specified recording\&.
\fInnn\fR
is the recoding id shown when a recording is added or by the list command\&. If the identified recording is part of a recurrent sequence the other recordings in the same sequence are untouched\&.
.RE
.PP
\*(Aq\fBdf\fR\*(Aq \- \fBDisplay total and used disk space\fR
.RS 4
Displays in both absolute and relative terms the amount of disk space on the partition containing the specified data directory (as specified in the config file)\&. The size is given in "human" readable format which means the use of M = Megabyte, G = Gigabyte and T = Terabyte\&.
.sp
Output example:
.sp

.sp
.if n \{\
.RS 4
.\}
.nf
612G of 4,1T (15 percent used) 
.fi
.if n \{\
.RE
.\}
.sp
.RE
.PP
\*(Aq\fBdp\fR [\fI@profile\fR]\*(Aq \- Display profile information command
.RS 4
Display information on the settings of the specified profile\&.
.sp
Output example:
.sp
.if n \{\
.RS 4
.\}
.nf
name                  : normal
ENCODER:
video_bitrate         : 3700000
video_peak_bitrate    : 4700000
audio_sampling        : 44\&.1
audio_bitrate         : 192
aspect                : 4x3
size                  : pal
FFMPEG:
use_transcoding       : 0
video_bitrate         : 800
video_peak_bitrate    : 1100
vcodec                : libx264
vpre                  : medium
pass                  : 1
acodec                : libfaac
audio_bitrate         : 128
video_size            : 
crop                  : l=0, r=0, t=0, b=0
ffmpeg_extra_options  : 
file_extension        : \&.mp4
.fi
.if n \{\
.RE
.\}
.RE
.PP
\*(Aq\fBdr\fR \fInnn\fR\*(Aq \- \fBDelete all repeated recordings\fR
.RS 4
Delete all repeated recording that are part of the same repeating sequence as the id of the recording specified\&.
.RE
.PP
\*(Aq\fBexit\fR \- \fBDisconnect from the server\fR
.RS 4
This command terminates the client connection to the server\&. It will not affect any of the ongoing recordings or transcodings\&.
.RE
.PP
\*(Aq\fBh\fR\*(Aq \- \fBHelp command\fR
.RS 4
Print a summary of all commands available\&.
.RE
.PP
\fBic\fR \fI[<video\-card>] <s|c|h|b> <val>\fR \- \fBAdjust video image controls\fR
.RS 4
Adjust image controls \*(Aqsaturation\*(Aq, \*(Aqcontrast\*(Aq, \*(Aqhue\*(Aq, \*(Aqbrightness\*(Aq\&. The value range is [\-50,50] with 0 being the \*(Aqneutral\*(Aq value\&. If the video card number is omitted the value will be set for all available cards\&.
.sp
\fBExample:\fR
.sp

.sp
.if n \{\
.RS 4
.\}
.nf
ic 0 c 10
ic 0 b \-20
.fi
.if n \{\
.RE
.\}
.sp
.RE
.PP
\*(Aq\fBkt\fR\*(Aq \fIn\fR \- \fBKill all ongoing transcoding command\fR
.RS 4
Stop specified ongoing transcoding processes\&. The index of the ongoing transcoding processes can be found via the
\fBot\fR
command\&. If no specific index is given then all ongoing transcodings will be stopped so be careful !
.RE
.PP
\*(Aq\fBktf\fR [\fIy\fR|\fIn\fR]\*(Aq \- \fBKill transcoding flag set/unset command\fR
.RS 4
The kill transcoding flag determines whether or not the transcoding processes should be killed when the server is stopped\&. By default all transcoding processes are killed when the tvpvrd server is killed\&. By setting this flag to \*(Aqn\*(Aq (No) the transcoding processes will be allowed to keep running after the server is stopped\&.
.sp
\fBOutput example:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
ktf n
killflag=n
.fi
.if n \{\
.RE
.\}
.RE
.PP
\*(Aq\fBl\fR\*(Aq \fIn\fR \- \fBList future recordings command\fR
.RS 4
List coming recordings\&. If
\fIn\fR
is specified as number in the range [1,99] then the list will be limited to
\fIn\fR
recordings\&. Otherwise all pending recordings will be listed\&.
.sp
Each record is listed with 7 fields\&. Each record starts with a \*(Aq[\*(Aq and ends with a \*(Aq]\*(Aq character\&. Each field is separated with a bar \*(Aq|\*(Aq\&. The order of fields are
.sp

.sp
.if n \{\
.RS 4
.\}
.nf
<id#> <station/channel name> <start\-date> <start\-time> <end\-time> <title> <profile>
.fi
.if n \{\
.RE
.\}
.sp
\fBOutput example:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
[160|tv4    |2010\-03\-09|21:00|21:59|House (16/20)                 |@normal]
[135|kanal5 |2010\-03\-11|21:00|21:59|Criminal minds (16/20)        |@normal]
[038|kanal5 |2010\-03\-11|22:00|22:59|Fringe (17/20)                |@normal]
[088|kanal5 |2010\-03\-14|22:25|23:19|Supernatural (18/21)          |@normal]
[161|tv4    |2010\-03\-16|21:00|21:59|House (17/20)                 |@normal]
[136|kanal5 |2010\-03\-18|21:00|21:59|Criminal minds (17/20)        |@normal]
[039|kanal5 |2010\-03\-18|22:00|22:59|Fringe (18/20)                |@normal]
.fi
.if n \{\
.RE
.\}
.RE
.PP
\*(Aq\fBlf\fR\*(Aq \- \fBlist all defined frequency tables\fR
.RS 4
List all defined frequency tables\&.
.sp
\fBOutput example:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
01 europe\-west
02 europe\-east
03 france
04 ireland
05 italy
06 australia
07 newzealand
08 us\-bcast
09 us\-cable
10 us\-cable\-hrc
11 us\-cable\-irc
12 japan\-bcast
13 japan\-cable
14 china\-bcast
15 southafrica
16 argentina
17 australia\-optus 
.fi
.if n \{\
.RE
.\}
.RE
.PP
\*(Aq\fBlh\fR\*(Aq [\fIn\fR] \- \fBList future recordings in human readable format\fR
.RS 4
This is the same command as \*(Aql\*(Aq but with the output shortened and ore easily read by humans
.sp
\fBOutput example:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
Fri Oct 01 21:00\-21:55 disc     Mountains
Fri Oct 01 22:05\-23:15 bbc1     Changes
.fi
.if n \{\
.RE
.\}
.RE
.PP
\*(Aq\fBlm\fR\*(Aq [\fIn\fR] \- \fBList future recordings and send them in a mail\fR
.RS 4
This command will create a mail (in HTML) format and send them to the mail address already specified in the config file\&. The mail will be formatted as both a HTML mail as well as in plain text format\&. This will allow mail clients both with and without HTML rendering capability to read the mail\&. This command assumes the setup if the SMTP mail client and will return an error of this has not been done\&.
.sp
(Note: The format style of the HTML table is controlled by CSS specified in the tvpvrd config file\&.)
.RE
.PP
\*(Aq\fBlmr\fR\*(Aq [\fIn\fR] \- \fBList future repeating and single recordings and send them in a mail\fR
.RS 4
This command will send a mail with two HTML lists\&. One with repeating recordings and the second list consisting of all single recordings, i\&.e\&. all recordings not included in the repeats\&.
.sp
(Note: The format style of the HTML table is controlled by CSS specified in the tvpvrd config file\&.)
.RE
.PP
\*(Aq\fBlog\fR\*(Aq [\fIn\fR] \- \fBShow last n lines of the log file\fR
.RS 4
If the logfile has been specified as a file (in
tvpvrd\&.conf) then this command will show the last n lines of the log\&. If no number is given it will default to show the last 10 lines\&.
.RE
.PP
\fBli\fR [\fIn\fR] \- \fBList all video input sources command\fR
.RS 4
List a all video sources available for the specified card\&. The current selected input source is marked with an asterisk\&. The type of input is shown in parenthesis in front of the textual name of the input\&. The type is either "tuner" or "camera"\&. If no card is specified then information on all installed card will be listed\&.
.sp
\fBOutput example:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
Hauppauge WinTV PVR\-350 
00 :*(tuner) Tuner 1 
01 : (camera) S\-Video 1 
02 : (camera) Composite 1 
03 : (camera) S\-Video 2 
04 : (camera) Composite 2 
05 : (camera) Composite 3 
.fi
.if n \{\
.RE
.\}
.RE
.PP
\*(Aq\fBlp\fR\*(Aq \- \fBList profiles command\fR
.RS 4
Print a list of all defined transcoding profiles numbered one per line(use \*(Aq\fBdp\fR\*(Aq command to display details of a specified profile)
.sp
\fBOutput example:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
#01 : mobile
#02 : low
#03 : cropnormal
#04 : tnormal
#05 : high
#06 : normal
#07 : wnormal
.fi
.if n \{\
.RE
.\}
.RE
.PP
\*(Aq\fBls\fR\*(Aq \- \fBList stations command\fR
.RS 4
List all defined station names\&. The stations are specified in the
xawtvrc
file and maps station names to channel names\&. When defining the frequency for a recording either the defined station name or channel (frequency) name can be used\&.
.sp
\fBOutput example:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
SE11: kanal5
  57: kanal8
 S36: kanal9
SE16: mtv
 E10: svt24
SE13: svtb/kunsk
  E5: tv1
  E7: tv2
 E11: tv3
  E6: tv4
SE14: tv4+
  E8: tv6
.fi
.if n \{\
.RE
.\}
.RE
.PP
\*(Aq\fBlc\fR [\fI#card\fR]\*(Aq \- \fBList all video capture card controls command\fR
.RS 4
This can be considered a low level command of limited use for an end user\&. This command will list all user controllable video/audio controls that can be adjusted on the specified video card\&. This is directly related to the discovered \*(Aqv4l2\*(Aq interfaces\&. Since the output is quite long we do not include any example output here\&. The output is intentionally modeled to be of the same format as the one used in \*(Aqv4l2\*(Aq output\&.
.sp
(This command is probably of little use for anything else than troubleshooting a video card and driver\&.)
.RE
.PP
\*(Aq\fBlq\fR [\fI#filelist\fR]\*(Aq \- \fBList information on the ongoing transcoding of file list \fR\fB\fI#filelist\fR\fR
.RS 4
List some useful information on the specified transcoding file list\&. The transcoding file list is a list with filenames that are queued up for transcoding\&. A transcoding file list is added with the
\fBtr\fR
command\&. Up to five simultaneous lists may be added\&. However, since transcoding is such a heavy job there is little real reason to add more than one lists at a time since a list with, say 20 full length movie video files, can easily take up more than two days to transcode\&.
.sp
\fBOutput example:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
       Filelist: #01                                
          Total: 17 videos in list                  
      Processed: 02 (11%) files                     
    Job started: Mon Jan 25 16:29:53 2010           
   Running time: 00 days 00:14 h                    
 Est\&. time left: \-1 days ~\-1 h (approx\&.)            
                                    
Processed:
  * /data/pvr/mp2/normal/svu_001\&.mpg
  * /data/pvr/mp2/normal/svu_2010\-01\-20_00\&.40\&.mpg
                                    
Not processed:
  + /data/pvr/mp2/normal/svu_2010\-01\-21_00\&.40\&.mpg
  + /data/pvr/mp2/normal/svu_2010\-01\-22_00\&.40\&.mpg
  + /data/pvr/mp2/normal/svu2ggr\&.mpg             
  + /data/pvr/mp2/normal/svu_k9_001\&.mpg          
  + /data/pvr/mp2/normal/svu\-k9_2010\-01\-21_00\&.05\&.mpg
  + /data/pvr/mp2/normal/svu\-k9_2010\-01\-22_00\&.05\&.mpg
  + /data/pvr/mp2/normal/svu\&.mpg                    
  + /data/pvr/mp2/normal/two_and_half_men_001\&.mpg   
  + /data/pvr/mp2/normal/two_and_half_men_002\&.mpg   
  + /data/pvr/mp2/normal/two_and_half_men\&.mpg       
  + /data/pvr/mp2/normal/världens_undergång\&.mpg     
  + /data/pvr/mp2/normal/vita_huset_001\&.mpg         
  + /data/pvr/mp2/normal/vita_huset\&.mpg             
  + /data/pvr/mp2/normal/white_noise\&.mpg            
  + /data/pvr/mp2/normal/WildThings\&.mpg  
.fi
.if n \{\
.RE
.\}
.sp
The fist set of information gives general information about the chosen file list\&. The last line of the first information block gives a rough estimate of the remaining time left needed to transcode the list\&. This is a very approximate estimation based on the time it has taken to transcode the files in the list up to now\&. In the example above the estimate is shown as \-1 indicating that there are too few completed transcodings for any estimate to be done\&. At least 2 transcoding must have been completed in order for the estimate to be shown\&.
.sp
The next set of information is the "Processed:" files\&. This is the files that have been processed, meaning it has been submitted for transcoding\&. This means that they have either been completely transcoded or is in the process of being transcoded\&.
.sp
The final block of information, the "Not processed:" block is the remainder of the files which are still waiting to be processed\&. No files are submitted for processing until the system load has fallen below the maximum limit for transcoding to start as specified in the
tvpvrd\&.conf
file\&.
.RE
.PP
\*(Aq\fBlr\fR\*(Aq \- \fBList repeating and single recordings\fR
.RS 4
This command will print a concise list with repeating recordings in one table and single recordings in a separate table\&. The date given for the repeating recordings will be the date for the next recording\&. See also \*(Aq\fBlmr\fR\*(Aq command which will mail a HTML version of these tables\&.
.sp
\fBOutput example:\fR
.sp

.sp
.if n \{\
.RS 4
.\}
.nf
Generated by: tvpvrd 3\&.0\&.5, Thu Mar 10 19:44:39 2011
=======================================================================================
#   Ch      Date       Start End   Repeat   Next/Tot Title                    Profile   
=======================================================================================
001 ch12    Thu Mar 10 23:35 00:10 Mon\-Thu  028/102  Mash                     @tnormal  
002 ch12    Fri Mar 11 03:00 04:05 Tue\-Fri  008/102  Amy                      @tnormal

Generated by: tvpvrd 3\&.0\&.5, Thu Mar 10 19:44:39 2011
=======================================================================================
#   Ch      Date       Start End   Title                                      Profile   
=======================================================================================
                        (No recordings)
.fi
.if n \{\
.RE
.\}
.sp
.RE
.PP
\*(Aq\fBmlg\fR\*(Aq \- \fBMail the log file as an attachment\fR
.RS 4
Mail the entire current logfile as an attachment\&. The address used is the system address specified in the config file\&.
.RE
.PP
\*(Aq\fBn\fR\*(Aq \- \fBNext recording command\fR
.RS 4
List the immediate next recording(s) scheduled for the available video card(s)\&. The first number in parenthesis is how long time until the recording will start\&.
.sp
\fBOutput example:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
(01:37) : [002|tv3    |2009\-11\-20|18:00|18:59|NCIS_18 (02/20)               |@normal]
(52:37) : [143|tv4    |2009\-11\-22|21:00|22:00|Shooter 1                     |@normal]
.fi
.if n \{\
.RE
.\}
.RE
.PP
\*(Aq\fBo\fR\*(Aq \- \fBOngoing recordings command\fR
.RS 4
List all ongoing recording in ordinary list format for all video cards\&. If no recordings are ongoing the output will show "None"
.sp
\fBOutput example:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
Video #0: [175|tv1    |2009\-11\-20|16:26|16:27|tv1_20091120_1626             |@normal]
Video #1: None\&.
.fi
.if n \{\
.RE
.\}
.RE
.PP
\*(Aq\fBot\fR\*(Aq \- \fBOngoing transcodings command\fR
.RS 4
List all ongoing transcodings\&. The output format is
.sp

.sp
.if n \{\
.RS 4
.\}
.nf
<#id> <start\-time> <(duration)> <filename> <profile>
.fi
.if n \{\
.RE
.\}
.sp
The start time identifies when the transcoding was started and duration shows for how long the transcoding has been running\&.
.sp
\fBOutput example:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
[#00|16:27|(00:00)|tv1_20091120_1626\&.mpg              |normal]
.fi
.if n \{\
.RE
.\}
.RE
.PP
\*(Aq\fBotl\fR\*(Aq \- \fBOngoing transcoding long command\fR
.RS 4
List all ongoing transcoding in long format which includes the detailed \*(Aqffmpeg\*(Aq command used which is printed on the second line\&.
.sp
\fBOutput example:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
[#00|16:27|(00:00)|tv1_20091120_1626\&.mpg              |normal]
(cmd: /usr/bin/ffmpeg \-v 0 \-i tv1_20091120_1626\&.mpg \-threads 0 
\-vcodec libx264 \-vpre normal \-b 700k \-bt 1000k  \-croptop 8 \-cropbottom 8 
\-cropleft 2 \-cropright 2  \-acodec copy \-ab 196k  \-y  
tv1_20091120_1626\&.mp4 > /dev/null 2>&1)
.fi
.if n \{\
.RE
.\}
.RE
.PP
\*(Aq\fBq\fR\*(Aq \- \fBQuick recording command\fR
.RS 4
Add new recording that will start immediately\&. This is basically the same as a simplified \*(Aq\fBa\fR\*(Aq command where the start time and start date is always the current date and time\&.
.sp
The format of the command are
.PP
\fIq <ch> [<duration>] [<title>] [<@profile]\fR
.RS 4
The recording will start within a few seconds (depending on the resolution time specified in the ini\-file) and will last for the duration specified\&. If no duration is specified the default duration time will be used\&. The duration is specified with hours and minutes as
.sp
\fIhh:mm\fR
.sp
If no title is specified the title will be constructed from the station/channel name and the start date and time\&.
.sp
If no profile is specified then the default profile specified in the ini\-file will be used\&.
.RE
.sp
\fBExamples\fR:
.sp
.if n \{\
.RS 4
.\}
.nf
q bbc2  
.fi
.if n \{\
.RE
.\}
.sp
Start a recording immediately on bbc2 using the default duration, title and profile\&.
.sp
.if n \{\
.RS 4
.\}
.nf
q bbc2 1:30 
.fi
.if n \{\
.RE
.\}
.sp
Start a recording immediately on bbc2 with duration 1 hour 30 minutes, using default title and default profile\&.
.sp
.if n \{\
.RS 4
.\}
.nf
q bbc2 News 
.fi
.if n \{\
.RE
.\}
.sp
Start a recording immediately on bbc2 with default duration using the title "News" and default profile\&.
.sp
.if n \{\
.RS 4
.\}
.nf
q ch4 1:45 Newsfocus @high  
.fi
.if n \{\
.RE
.\}
.sp
Start a new recording on station \*(Aqch4\*(Aq with title \*(AqNewsfocus\*(Aq using the \*(Aqhigh\*(Aq profile\&.
.RE
.PP
\*(Aq\fBrh\fR\*(Aq \- \fBRecord history\&. Show a list of previous made recordings\fR
.RS 4
List previously made recodings/transcodings with some basci information\&. There is a hard limit so that a maximum of 20 past recordings are shown in the list\&. This is a compile time setting\&. (The ini\-file already have too many settings\&.\&.\&.)
.sp
Output example:
.sp
The columns in the listing are
\fI<startdate> <start time> <title> <filepath> <profile>\fR
.sp
.if n \{\
.RS 4
.\}
.nf
Thu Jun 09 21:55 Screen at two   /mnt/omega/mm/pvr/mp4/screen_at_two\&.mp4       tnormal   
Tue Jun 07 19:30 Departed mems   /mnt/omega/mm/pvr/mp4/departed_mems\&.mp4       tnormal   
Wed Jun 01 00:50 Once more       /mnt/omega/mm/pvr/mp4/once_more\&.mp4           tnormal
.fi
.if n \{\
.RE
.\}
.RE
.PP
\*(Aq\fBrhm\fR\*(Aq \- \fBMail the history list of recordings\fR
.RS 4
The history list (sam as from command \*(Aq\fBrh\fR\*(Aq) is mailed to the predefined system address in the configuration file
.RE
.PP
\*(Aq\fBrst\fR\*(Aq \- \fBReset statistics command\fR
.RS 4
Reset all statistics, i\&.e\&. set all statistics to 0\&.
.RE
.PP
\*(Aq\fBrp\fR\*(Aq \- \fBRefresh profiles command\fR
.RS 4
This command will cause the profiles to be re\-read from profile files\&. This can be used to refresh the profiles without having to restart the server\&.
.RE
.PP
\*(Aq\fBsm\fR \fIn\fR\*(Aq \- \fBSet default name mangling type\fR
.RS 4
Set default name mangling type for series recording
.sp
Supported types:
.sp

.sp
.if n \{\
.RS 4
.\}
.nf
0 = Add date, e\&.g\&. "myrec_2012\-11\-22"
1 = Number and total number of recordings, e\&.g\&. "myrec_02\-12"
2 = Add episode number \*(AqEnn\*(Aq to the end of the name usefull for "SxxEyy" style naming, e\&.g\&. "myrec_S11E12"
.fi
.if n \{\
.RE
.\}
.sp
See \*(Aq\fBss\fR\*(Aq command for controlling the episode numbering\&.
.RE
.PP
\*(Aq\fBsp\fR \fInnn\fR \fI@profile\fR\*(Aq \- \fBSet profile command\fR
.RS 4
Specify the profiles to be used on the specified recording\&. This will replace any previous defined profiles for this recording\&. Up to four profiles per recording can be defined\&.
.sp
\fBExamples:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
sp 87 @normal @mobile
.fi
.if n \{\
.RE
.\}
.sp
Use profiles
\fInormal\fR
and
\fImobile\fR
for recording
\fI#87\fR
.RE
.PP
\*(Aq\fBss\fR \fInn\fR\*(Aq \- Set episode start number
.RS 4
Specify the start episode number used for specifying title and file name for the recording\&. Se the \*(Aq\fBsm\fR\*(Aq command for example on how the episode number is used\&.
.RE
.PP
\*(Aq\fBs\fR\*(Aq \- \fBServer status command\fR
.RS 4
Print a summary of the server status\&. This includes information on when the tvpvrd was started, how long it has been running for, the current server load, current server time, allocated virtual memory, number of running threads in the server and finally a list of clients currently connected to the server\&.
.sp
\fBOutput example:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
Current time    : Sun Oct 10 09:48:24 2010
tvpvrd started  : Fri Oct  8 08:53:00 2010
tvpvrd uptime   : 02 days 00 hours 55 min
Server uptime   : 03 days 02 hours 37 min
Server load     : 0\&.1 0\&.1 0\&.0
Virtual memory  : 56796 kB
Threads         : 4
Clients         : #01: 192\&.168\&.0\&.31, Sun Oct 10 09:48:24 2010
.fi
.if n \{\
.RE
.\}
.RE
.PP
\*(Aq\fBst\fR\*(Aq \- \fBPrint profile statistics\fR
.RS 4
Print transcoding statistics for the defined profiles\&. This statistics is gathered for every transcoding made\&. The statistics includes among other things the running time and average size per minute of the original MP2 and the transcoded file\&. The statistics for the transcoding can be used to predict how long time a transcoding will take\&. However since it is highly dependent on the load on the server it can be difficult to accurately predict the needed transcoding time\&.
.sp
\fBOutput example:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
profile_name            : \*(Aqnormal\*(Aq
transcoding_speed       : 44 s transcoded / min
mp2size_1min            : 27\&.5 Mb/min
mp4size_1min            : 6\&.4 Mb/min
comp_ratio              : 4\&.3
total_ttime             : 3481 min
total_mp2time           : 1779 min
total_mp2files          : 31
total_mp4files          : 31
.fi
.if n \{\
.RE
.\}
.sp
The different fields have the following meaning
.PP
\fIprofile_name\fR
.RS 4
The name of the profile that this statistics apply to\&.
.RE
.PP
\fItranscoding_speed\fR
.RS 4
How much play time the server on average can transcode per minute run time of \*(Aqffmpeg\*(Aq\&.
.RE
.PP
\fImp2size_1min\fR
.RS 4
The average size of 1 minute play time in the original MP2 file\&.
.RE
.PP
\fImp4size_1min\fR
.RS 4
The average size of 1 minute of play time in the resulting transcoded MP4 size\&.
.RE
.PP
\fIcomp_ratio\fR
.RS 4
The compression ration between the original MP2 size and the MP4 transcoded file\&.
.RE
.PP
\fItotal_ttime\fR
.RS 4
Total running time that has been spent transcoding files\&.
.RE
.PP
\fItotal_mp2time\fR
.RS 4
Total recorded original MP2 time\&.
.RE
.PP
\fItotal_mp2files\fR
.RS 4
Total number of mp2files recorded with this profile\&.
.RE
.PP
\fItotal_mp4files\fR
.RS 4
Total number of transcoded MP4 files with this profile\&.
.RE
.sp
.RE
.PP
\*(Aq\fBt\fR\*(Aq \- \fBCurrent Time and Date command\fR
.RS 4
Print current time and date on the server where \*(Aqtvpvrd\*(Aq is running
.sp
\fBOutput example:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
Fri Nov 20 15:51:20 2009
.fi
.if n \{\
.RE
.\}
.RE
.PP
\*(Aq\fBtf\fR \fIfilename\fR [\fI@profile\fR]\*(Aq \- \fBTranscode specified file using the named optional profile\fR
.RS 4
This command is used to transcode any file within the file system using a specified transcoding profile\&. If the profile name is not given the the system default transcoding profile will be used\&.
.sp
filename is the full path to the (normally MP2) video file that should be encoded\&. The resulting transcoded file is stored in the
<datadir>/mp4/<profile>/
directory\&. During the transcoding a temporary directory under
<datadir>/vtmp/
is created and used as a working directory\&. The original file is not chnaged in any ways\&. During the transcoding a symbolic link is created in the temporary directory which makes it in theory possible to have the original file on another file system\&.
.sp
\fBExample:\fR
.sp

.sp
.if n \{\
.RS 4
.\}
.nf
tf /data/pvr/mp2/normal/oldreccording\&.mpg @high
.fi
.if n \{\
.RE
.\}
.sp
.RE
.PP
\*(Aq\fBtl\fR \fIfilename\fR [\fI@profile\fR]\*(Aq \- \fBQueue all files listed in file \fR\fB\fIfilename\fR\fR\fB for transcoding using the named optional profile\fR
.RS 4
This commands will queue all (video) files listed in the file specified in the command for transcoding\&.
.sp
The list file consists of a number of lines (each line ending with a newline) with either
.sp
a fully specified video file name or
.sp
a filepath which will be used for the following files as prefix until the next filepath is specified\&. A filepath is identified by having the first character on the row being a \*(Aq:\*(Aq (colon) character\&.
.sp
\fBExample input file:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
:/data/pvr/mp2/normal
svu_001\&.mpg
svu_2010\-01\-20_00\&.40\&.mpg
svu_2010\-01\-21_00\&.40\&.mpg
svu_2010\-01\-22_00\&.40\&.mpg
svu2ggr\&.mpg
svu_k9_001\&.mpg
svu\-k9_2010\-01\-21_00\&.05\&.mpg
svu\-k9_2010\-01\-22_00\&.05\&.mpg
svu\&.mpg
two_and_half_men_001\&.mpg
two_and_half_men_002\&.mpg
two_and_half_men\&.mpg
vita_huset_001\&.mpg
vita_huset\&.mpg
white_noise\&.mpg
WildThings\&.mpg 
.fi
.if n \{\
.RE
.\}
.sp
In the above file all the video files will be read from the directory
/data/pvr/mp2/normal\&. The result of the transcoding will (as usual) be stored under the corresponding mp4 profile directory\&. Up to 5 different file lists can be added simultaneous\&. There is no guarantee that files from all queued file lists will be fairly processed, i\&.e\&. one file from the first list, and when that is done, a file from the second file lists and so on\&. This is completely random\&. The only thing that is guaranteed is that the video files in each file lists will be processed sequentially\&.
.sp
Remember that transcoding multiple files can take a long time\&. For example a file list with 10 video files can easily take ~2 days (~4 hours transcoding time per video)\&.
.sp
To view the status of ongoing list transcodings the "\fBlq\fR" (list\-queue) command can be used\&.
.RE
.PP
\*(Aq\fBtd\fR \fIdirectory\fR [\fI@profile\fR]\*(Aq \- \fBTranscode all files in the specified directory\fR
.RS 4
This command will search the specified directory for files with recognized video suffix and submit all found files to transcoding\&.
.RE
.PP
\*(Aq\fBu\fR\*(Aq \- \fBUpdate database file command\fR
.RS 4
Force update of the database file from memory\&. Normally this command is not necessary since in versions above v1\&.2 of tvpvrd the database is automatically updated whenever a new recording is added or removed\&. This command is kept for backwards compatibility but should not be used\&.
.RE
.PP
\*(Aq\fBv\fR\*(Aq \- \fBVersion command\fR
.RS 4
Print program version and name as well as the build date\&. The following lines will give information on how the server was compiled\&.
.sp
\fBOutput example:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
tvpvrd 1\&.1\&.2 [client] (Jan 26 2010)
Compiled with Large File Support (files > 2GB)\&.
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fBva\fR \fI[<video\-card>] value\fR\- \fBAdjust volume\fR
.RS 4
Adjust volume on video card\&. Valid volume is in the range [0,100]\&. If the video card number is omitted the value will be set for all available cards\&.
.sp
\fBExample:\fR
.sp

.sp
.if n \{\
.RS 4
.\}
.nf
va 0 85
va 50
.fi
.if n \{\
.RE
.\}
.sp
.RE
.PP
\*(Aq\fBvc\fR [\fI0\fR|\fI1\fR|\fI2\fR|\fI3\fR|\fI4\fR]\*(Aq \- \fBVideo Card information command\fR
.RS 4
Print information on the specified video/capture cards\&. The command will print information of all available cards if no specific card number is specified\&. The information shown is the name of the card, driver and driver version\&.
.sp
\fBOutput example:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
Card 00: Hauppauge WinTV PVR\-350, driver=ivtv v1\&.4\&.1
Card 01: Hauppauge WinTV PVR\-150, driver=ivtv v1\&.4\&.1
.fi
.if n \{\
.RE
.\}
.RE
.PP
\*(Aq\fBwt\fR\*(Aq \- \fBList all transcoding waiting to start\fR
.RS 4
A transcoding is not started until the server load is below the specified treshold in the ini\-file\&. By default this treshold is 4\&. This command will generate a list of all transcoding that are waiting\&.\&.
.sp
The listing uses the same format as the
\fBot\fR
command and contains (in order from left to right)
.sp
1\&. Sequence number
.sp
2\&. Time when item was enqueued
.sp
3\&. How long (hh:mm) the item has been waiting to be transcoded
.sp
4\&. Name of video file to be transcoded
.sp
5\&. Profile name to be used for the transcoding
.sp
\fBNote:\fR
There is no guarantee that the files will be transcoded in the order indicated by the list\&.\&.
.sp
\fBOutput example:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
[#01|21:37|(00:04)|news_at_eight\&.mpg                          |@tnormal]
[#02|21:38|(00:03)|commander\&.mpg                              |@tnormal]
.fi
.if n \{\
.RE
.\}
.RE
.PP
\*(Aq\fBx\fR\*(Aq \- \fBView XML database command\fR
.RS 4
View the current specified recordings in raw XML DB format\&. See
\fBtvpvrd\fR(5)
for details about the format\&.
.RE
.PP
\*(Aq\fBz\fR\*(Aq \- \fBDisplay all ini\-file settings command\fR
.RS 4
This will list all settings made in the ini\-file as well as the location of the used ini file\&.
.sp
\fBOutput example:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
datadir                       : /data/pvr                    
use_profile_directories       : 0
use_repeat_rec_basedir        : 1                            
logfile                       : /tmp/tvpvrd\&.log              
verbose_log                   : 3                            
inifile_name                  : /etc/tvpvrd/tvpvrd\&.conf      
sendmail_on_error             : 1                            
sendmail_on_transcode_end     : 1                            
sendmail_on_shutdown          : 1                            
sendmail_address              : johan162@gmail\&.com           
locale_name                   : sv_SE\&.UTF8                   
smtp_use                      : 1                            
use_html                      : 1                            
smtp_server                   : 192\&.168\&.0\&.31                 
smtp_user                     : ljp                          
daemonize                     : 1                            
enable_webinterface           : 1                            
require_web_password          : 1                            
web_user                      : ljp
web_password                  : samba23
weblogin_timeout              : 0
username                      : root
xmldbfile_name                : /data/pvr/xmldb/tvpvrd_db\&.xml
max_video                     : 2
max_entries                   : 1024
max_clients                   : 4
client_idle_time              : 1800
port                          : 9300
time_resolution               : 3
video_buffer_size             : 307200 (0\&.3MB)
default_recording_time        : 00:59 (h:min)
xawtv_station file            : /etc/X11/xawtvrc
default_profile               : tnormal
frequency_map                 : europe\-west
allow_profiles_adj_encoder    : 1
external_switch               : 0
external_input                : 1
external_switch_script        : switchchannel\&.sh
use_postrec_processing        : 1
postrec_processing_script     : postrec_processing\&.sh
shutdown_enable               : 1
shutdown_min_time             : 180
shutdown_ignore_users         : 0
shutdown_min_uptime           : 180
shutdown_pre_startup_time     : 180
shutdown_script_name          : shutdown\&.sh
.fi
.if n \{\
.RE
.\}
.RE
.PP
\*(Aq\fB!\fR [\fI#videocard\fR]\*(Aq \- Stop recording on specified video card
.RS 4
Stop the recording on the specified video card\&. The aborted recording will be left in the \*(Aq<data\-dir>/vtmp/vid<n>/\*(Aq directory and must be manually removed\&.
.RE
.SH "FILES"
.PP
Note: The system configuration directory to be used is a compile time settings and specified with the \*(Aq\fIconfiguration\fR\*(Aq argument \*(Aq\-\-sysconfdir\*(Aq\&.
.PP
/etc/X11/xawtvrc
.RS 4
A list in ini\-file format which maps the commonly known station name to a frequency channel\&. This is the default location used by the package xawtv
.RE
.PP
<log\-directory>/tvpvrd\&.log
.RS 4
The logfile\&. The log\-directory is specified in the ini\-file\&. It can also be specified as a command line argument (\fB\-l, \-\-logfile\fR) which will then override the ini\-file setting\&. By default the log file will be stored under
/tmp/tvpvrd\&.log
\&.(The reason not to use
/var/log/tvpvrd\&.log
is the fact that the server will not normally run as root and hence will not have write access to this directory\&.)
.RE
.PP
/var/run/tvpvrd\&.pid
.RS 4
The pid of the started \*(Aqtvpvrd\*(Aq server\&. This is used to easily find the pid in order to shutdown the server\&. This is used by the
\fIstop\-tvpvrd\fR
script\&. Note that in order to use this directory the daemon has to be started by the root user\&.
.RE
.PP
/etc/tvpvrd/tvpvrd\&.conf
.RS 4
Default configuration file
.RE
.PP
/etc/tvpvrd/profiles/
.RS 4
Directory with all profiles
.RE
.PP
<data\-directory>/
.RS 4
Directory where all recordings and temporary files are stored\&. The root directory is specified in the configuration file\&.
.RE
.PP
<data\-directory>/vtmp
.RS 4
Video temporary directory\&. Used to store ongoing recordings and as working directories while doing transcoding
.RE
.PP
<data\-directory>/mp2
.RS 4
If the profile specifies that the original mp2 files should be kept they are stored in this directory\&.
.RE
.PP
<data\-directory>/mp4
.RS 4
The transcoded files are stored under this folder in a subfolder with the name of the profile used for the transcoding\&.
.RE
.PP
<data\-directory>/xmldb
.RS 4
The database files are stored under this directory (future recordings and history)\&. The format is structured XML\&.
.RE
.PP
<data\-directory>/stats
.RS 4
The statistics for each profile is stored in a file in XML format with the same name as the profile and with the suffix \*(Aq\&.stats\*(Aq\&.
.RE
.SH "LIMITATIONS"
.PP

.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Numerical dates must be specified in European format, yyyy\-mm\-dd
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Not all international defined frequency maps are included\&. Supportedc maps can be found by the "\fBlf\fR" command\&.
.sp
Frequency maps are a simple vector defining the frequency as an integer and a string that defines the channel name\&. This is a compile time setting and adding new maps will require recompilation of the server\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
The
/var/run/tvpvrd\&.pid
file is not removed after the program has shut down if the effective user is any other than \*(Aqroot\*(Aq, (by default the server will switch to the \*(Aqtvpvrd\*(Aq user) since only root has access to
/var/run
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Maximum recording time is 4 hours (in order to keep maximum MPEG2 file size manageable)\&. This can result in up to ~8GB MPEG2 files depending on the HW bitrate used\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
All information, error messages and loggings are hard coded in English\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
The server assumes that all installed capture cards uses the same index to specify the tuner as input among all the possible input sources (as specified by the configuration file setting
\fItuner_input_index\fR)
.RE
.sp
.SH "BUGS"
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
The configuration file has too many settings\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Theoretically if the server is extremely busy some newer recorded files could be transcoded before older recordings\&. This is due to the fact that there is not a central queue for the transcodings\&. Each recording just backs off and waits a (random) time until it tries to see if it can start the transcoding (when the server load is below the set threshold)\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
The \*(Aq\fBi\fR\*(Aq command is not yet implemented\&.
.RE
.SH "NOTES"
.PP
Any errors that are discovered in the startup phase before a logfile has been established will be written to the default system log (normally
/var/log/messages)
.PP
The formal grammar for the XML based DB file is specified as an RNG (Relax New Grammar) XML specification included in the distribution in the docs directory\&.
.SH "RESOURCES"
.PP

.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
SourceForge: <http://sourceforge\&.net/projects/tvpvrd/>
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
ivtv\-driver: <http://ivtvdriver\&.org/>
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Video for Linux: <http://linux\&.bytesex\&.org/v4l2/>
.RE
.sp
.SH "AUTHOR"
.PP
Written and maintained by Johan Persson <johan162@gmail\&.com>
.SH "COPYRIGHT"
.PP
Free use of this software is granted under the terms of the GNU General Public License (GPL v3)\&., see the file COPYING included in the distribution archive for details\&.
.SH "SEE ALSO"
.PP
\fBtvpsh\fR(1),
\fBtvpowerd\fR(1),
\fBffmpeg\fR(1),
\fBscantv\fR(1),
\fBv4l-info\fR(1),
\fBv4l-conf\fR(1),
\fBv4lctl\fR(1),
\fBxawtv\fR(1)
.SH "AUTHOR"
.PP
\fBJohan Persson\fR <\&johan162@gmail\&.com\&>
.RS 4
Main author and maintainer
.RE
